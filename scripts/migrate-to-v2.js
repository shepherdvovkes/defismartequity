const { ethers } = require("hardhat");
const fs = require("fs");
const path = require("path");

async function main() {
    console.log("üîÑ –ù–∞—á–∏–Ω–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏—é —Å V1 –Ω–∞ V2...");
    
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –∞–¥—Ä–µ—Å–∞ —Å—Ç–∞—Ä—ã—Ö –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤
    const oldContractsPath = path.join(__dirname, "..", "deployed-contracts.json");
    const newContractsPath = path.join(__dirname, "..", "deployed-contracts-v2.json");
    
    if (!fs.existsSync(oldContractsPath)) {
        throw new Error("‚ùå –§–∞–π–ª deployed-contracts.json –Ω–µ –Ω–∞–π–¥–µ–Ω");
    }
    
    if (!fs.existsSync(newContractsPath)) {
        throw new Error("‚ùå –§–∞–π–ª deployed-contracts-v2.json –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–Ω–∞—á–∞–ª–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –¥–µ–ø–ª–æ–π V2 –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤.");
    }
    
    const oldContracts = JSON.parse(fs.readFileSync(oldContractsPath, "utf8"));
    const newContracts = JSON.parse(fs.readFileSync(newContractsPath, "utf8"));
    
    console.log("üìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–∏–≥—Ä–∞—Ü–∏–∏:");
    console.log("–°—Ç–∞—Ä—ã–µ –∫–æ–Ω—Ç—Ä–∞–∫—Ç—ã:", oldContracts);
    console.log("–ù–æ–≤—ã–µ –∫–æ–Ω—Ç—Ä–∞–∫—Ç—ã:", newContracts);
    
    // –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω—Ç—Ä–∞–∫—Ç—ã
    const [deployer] = await ethers.getSigners();
    
    // –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ —Å—Ç–∞—Ä—ã–º –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞–º
    const DefimonToken = await ethers.getContractFactory("DefimonToken");
    const DefimonInvestment = await ethers.getContractFactory("DefimonInvestment");
    
    const oldToken = DefimonToken.attach(oldContracts.defimonToken);
    const oldInvestment = DefimonInvestment.attach(oldContracts.defimonInvestment);
    
    // –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –Ω–æ–≤—ã–º –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞–º
    const DefimonTokenV2 = await ethers.getContractFactory("DefimonTokenV2");
    const DefimonInvestmentV2 = await ethers.getContractFactory("DefimonInvestmentV2");
    
    const newToken = DefimonTokenV2.attach(newContracts.defimonTokenV2);
    const newInvestment = DefimonInvestmentV2.attach(newContracts.defimonInvestmentV2);
    
    console.log("\nüìä –ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –º–∏–≥—Ä–∞—Ü–∏–∏...");
    
    // –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Å—Ç–∞—Ä—ã—Ö –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤
    const oldStats = await oldInvestment.getContractStats();
    const oldInvestorCount = await oldInvestment.getInvestorCount();
    
    console.log("–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ V1 –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤:");
    console.log("- –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–Ω–≤–µ—Å—Ç–æ—Ä–æ–≤:", oldInvestorCount.toString());
    console.log("- –û–±—â–∏–π –æ–±—ä–µ–º –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π:", ethers.utils.formatEther(oldStats.totalInvestments), "ETH");
    console.log("- –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–æ —Ç–æ–∫–µ–Ω–æ–≤:", ethers.utils.formatEther(oldStats.totalTokensDistributed), "DEFI");
    
    // –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∏–Ω–≤–µ—Å—Ç–æ—Ä–æ–≤
    console.log("\nüë• –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∏–Ω–≤–µ—Å—Ç–æ—Ä–æ–≤...");
    const investors = [];
    
    for (let i = 0; i < oldInvestorCount; i++) {
        const investorAddress = await oldInvestment.getInvestorByIndex(i);
        const investorInfo = await oldInvestment.getInvestorInfo(investorAddress);
        
        investors.push({
            address: investorAddress,
            totalInvested: investorInfo.totalInvested.toString(),
            totalTokens: investorInfo.totalTokens.toString(),
            investmentCount: investorInfo.investmentCount.toString(),
            lastInvestmentTime: investorInfo.lastInvestmentTime.toString()
        });
    }
    
    console.log(`‚úÖ –ü–æ–ª—É—á–µ–Ω–æ ${investors.length} –∏–Ω–≤–µ—Å—Ç–æ—Ä–æ–≤`);
    
    // –°–æ–∑–¥–∞–µ–º –ø–ª–∞–Ω –º–∏–≥—Ä–∞—Ü–∏–∏
    const migrationPlan = {
        timestamp: new Date().toISOString(),
        oldContracts: oldContracts,
        newContracts: newContracts,
        investors: investors,
        totalInvestors: investors.length,
        migrationStatus: "pending"
    };
    
    const migrationPath = path.join(__dirname, "..", "migration-plan.json");
    fs.writeFileSync(migrationPath, JSON.stringify(migrationPlan, null, 2));
    
    console.log("\nüìÑ –ü–ª–∞–Ω –º–∏–≥—Ä–∞—Ü–∏–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ migration-plan.json");
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å
    console.log("\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤...");
    
    const oldTokenInfo = {
        name: await oldToken.name(),
        symbol: await oldToken.symbol(),
        decimals: await oldToken.decimals(),
        totalSupply: (await oldToken.totalSupply()).toString()
    };
    
    const newTokenInfo = await newToken.getTokenInfo();
    
    console.log("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–æ–∫–µ–Ω–∞—Ö:");
    console.log("V1:", oldTokenInfo);
    console.log("V2:", newTokenInfo);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ—Å–Ω–æ–≤–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Å–æ–≤–ø–∞–¥–∞—é—Ç
    if (oldTokenInfo.name !== newTokenInfo.tokenName) {
        console.warn("‚ö†Ô∏è  –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å");
    }
    
    if (oldTokenInfo.symbol !== newTokenInfo.tokenSymbol) {
        console.warn("‚ö†Ô∏è  –°–∏–º–≤–æ–ª —Ç–æ–∫–µ–Ω–∞ –∏–∑–º–µ–Ω–∏–ª—Å—è");
    }
    
    if (oldTokenInfo.decimals !== newTokenInfo.tokenDecimals) {
        console.warn("‚ö†Ô∏è  –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–µ—Å—è—Ç–∏—á–Ω—ã—Ö –∑–Ω–∞–∫–æ–≤ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å");
    }
    
    console.log("\n‚úÖ –ê–Ω–∞–ª–∏–∑ –º–∏–≥—Ä–∞—Ü–∏–∏ –∑–∞–≤–µ—Ä—à–µ–Ω");
    console.log("\nüìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:");
    console.log("1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–ª–∞–Ω –º–∏–≥—Ä–∞—Ü–∏–∏ –≤ migration-plan.json");
    console.log("2. –£–≤–µ–¥–æ–º–∏—Ç–µ –∏–Ω–≤–µ—Å—Ç–æ—Ä–æ–≤ –æ –ø–µ—Ä–µ—Ö–æ–¥–µ –Ω–∞ V2");
    console.log("3. –û–±–Ω–æ–≤–∏—Ç–µ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å V2 –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞–º–∏");
    console.log("4. –í—ã–ø–æ–ª–Ω–∏—Ç–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ V2 –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤");
    console.log("5. –ü–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ–±–Ω–æ–≤–∏—Ç–µ deployed-contracts.json");
}

main()
    .then(() => process.exit(0))
    .catch((error) => {
        console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –º–∏–≥—Ä–∞—Ü–∏–∏:", error);
        process.exit(1);
    });
