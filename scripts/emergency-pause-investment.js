const { ethers } = require("hardhat");
const fs = require("fs");
const path = require("path");

async function main() {
    console.log("–≠–ö–°–¢–†–ï–ù–ù–ê–Ø –ü–†–ò–û–°–¢–ê–ù–û–í–ö–ê –ò–ù–í–ï–°–¢–ò–¶–ò–û–ù–ù–û–ì–û –ö–û–ù–¢–†–ê–ö–¢–ê DEFIMON V2");
    console.log("=".repeat(60));
    
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –∞–¥—Ä–µ—Å–∞ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤
    const contractsPath = path.join(__dirname, "..", "deployed-contracts-v2.json");
    if (!fs.existsSync(contractsPath)) {
        throw new Error("‚ùå –§–∞–π–ª deployed-contracts-v2.json –Ω–µ –Ω–∞–π–¥–µ–Ω");
    }
    
    const contracts = JSON.parse(fs.readFileSync(contractsPath, "utf8"));
    
    // –ü–æ–ª—É—á–∞–µ–º –∞–∫–∫–∞—É–Ω—Ç
    const [deployer] = await ethers.getSigners();
    console.log("Deployer:", deployer.address);
    console.log("Balance:", ethers.utils.formatEther(await deployer.getBalance()), "ETH");
    
    // –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –∫–æ–Ω—Ç—Ä–∞–∫—Ç—É –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π
    const DefimonInvestmentV2 = await ethers.getContractFactory("DefimonInvestmentV2");
    const investment = DefimonInvestmentV2.attach(contracts.defimonInvestmentV2);
    
    console.log("\nüìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω–æ–º –∫–æ–Ω—Ç—Ä–∞–∫—Ç–µ:");
    console.log("Address:", contracts.defimonInvestmentV2);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å
    const isPaused = await investment.paused();
    console.log("Current pause status:", isPaused);
    
    if (isPaused) {
        console.log("‚ö†Ô∏è  –ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω—ã–π –∫–æ–Ω—Ç—Ä–∞–∫—Ç —É–∂–µ –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!");
        return;
    }
    
    // –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞
    const stats = await investment.getContractStats();
    console.log("Contract balance:", ethers.utils.formatEther(stats.contractBalance), "ETH");
    console.log("Token balance:", ethers.utils.formatEther(stats.tokenBalance), "DEFI");
    console.log("Total investors:", stats.totalInvestors.toString());
    console.log("Current coefficient:", stats.currentCoefficient.toString());
    
    // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–¥–ø–∏—Å–∞–Ω—Ç–∞—Ö
    const signers = await investment.getSigners();
    console.log("\nüë• –ü–æ–¥–ø–∏—Å–∞–Ω—Ç—ã –º—É–ª—å—Ç–∏–ø–æ–¥–ø–∏—Å–∏:");
    console.log("Signer 1:", signers.signer1Address);
    console.log("Signer 2:", signers.signer2Address);
    console.log("Signer 3:", signers.signer3Address);
    
    // –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏—è
    console.log("\n‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∏—Ç –≤—Å–µ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏!");
    console.log("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–µ —Å–º–æ–≥—É—Ç –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –¥–æ —Å–Ω—è—Ç–∏—è –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∫–∏.");
    console.log("–í—ã–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤ —á–µ—Ä–µ–∑ –º—É–ª—å—Ç–∏–ø–æ–¥–ø–∏—Å—å –æ—Å—Ç–∞–Ω–µ—Ç—Å—è –¥–æ—Å—Ç—É–ø–Ω—ã–º.");
    
    // –ü—Ä–∏–æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–Ω—Ç—Ä–∞–∫—Ç
    console.log("\nüõë –ü—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω–æ–≥–æ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞...");
    const tx = await investment.pause();
    console.log("Transaction hash:", tx.hash);
    
    // –ñ–¥–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
    console.log("‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è...");
    const receipt = await tx.wait();
    console.log("‚úÖ –ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω—ã–π –∫–æ–Ω—Ç—Ä–∞–∫—Ç —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!");
    console.log("Block number:", receipt.blockNumber);
    console.log("Gas used:", receipt.gasUsed.toString());
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
    const newPauseStatus = await investment.paused();
    console.log("New pause status:", newPauseStatus);
    
    // –õ–æ–≥–∏—Ä—É–µ–º –¥–µ–π—Å—Ç–≤–∏–µ
    const logEntry = {
        timestamp: new Date().toISOString(),
        action: "EMERGENCY_PAUSE_INVESTMENT",
        contract: contracts.defimonInvestmentV2,
        deployer: deployer.address,
        transactionHash: tx.hash,
        blockNumber: receipt.blockNumber,
        gasUsed: receipt.gasUsed.toString(),
        contractBalance: ethers.utils.formatEther(stats.contractBalance),
        tokenBalance: ethers.utils.formatEther(stats.tokenBalance),
        totalInvestors: stats.totalInvestors.toString(),
        reason: "Emergency security measure"
    };
    
    const logPath = path.join(__dirname, "..", "emergency-logs.json");
    let logs = [];
    
    if (fs.existsSync(logPath)) {
        logs = JSON.parse(fs.readFileSync(logPath, "utf8"));
    }
    
    logs.push(logEntry);
    fs.writeFileSync(logPath, JSON.stringify(logs, null, 2));
    
    console.log("\nüìÑ –î–µ–π—Å—Ç–≤–∏–µ –∑–∞–ø–∏—Å–∞–Ω–æ –≤ emergency-logs.json");
    
    // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    console.log("\nüì¢ –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:");
    console.log("1. –£–≤–µ–¥–æ–º–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏");
    console.log("2. –£–≤–µ–¥–æ–º–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –æ –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∫–µ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π");
    console.log("3. –ü—Ä–æ–≤–µ–¥–∏—Ç–µ –∞–Ω–∞–ª–∏–∑ —É–≥—Ä–æ–∑");
    console.log("4. –ü–æ–¥–≥–æ—Ç–æ–≤—å—Ç–µ –ø–ª–∞–Ω –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è");
    console.log("5. –ö–æ–æ—Ä–¥–∏–Ω–∏—Ä—É–π—Ç–µ —Å –ø–æ–¥–ø–∏—Å–∞–Ω—Ç–∞–º–∏ –º—É–ª—å—Ç–∏–ø–æ–¥–ø–∏—Å–∏");
    
    console.log("\nüîÑ –î–ª—è —Å–Ω—è—Ç–∏—è –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:");
    console.log("npx hardhat run scripts/emergency-unpause-investment.js --network sepolia");
    
    console.log("\nüí∞ –î–ª—è —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ–≥–æ –≤—ã–≤–æ–¥–∞ —Å—Ä–µ–¥—Å—Ç–≤ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:");
    console.log("npx hardhat run scripts/emergency-withdrawal.js --network sepolia");
}

main()
    .then(() => process.exit(0))
    .catch((error) => {
        console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ–π –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∫–µ:", error);
        process.exit(1);
    });
